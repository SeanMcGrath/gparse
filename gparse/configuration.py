"""
Defines Configuration class for representation of molecular
structure at one particular point in time.

Part of raman package.

Copyright Sean McGrath 2015. Issued under the MIT License.
"""

from .spectrum import Spectrum
from .matrix import DistanceMatrix


class Configuration:
    """
    A single molecular Configuration - associates calculated spectra
    with a DistanceMatrix at a single point in time and temperature.
    """

    def __init__(self, matrix, raman_spectrum=None, ir_spectrum=None, time=None, temperature=None):
        """
        Constructor.
        :param raman_spectrum: a raman.Spectrum
        :param ir_spectrum: a raman.Spectrum
        :param matrix: a raman.DistanceMatrix
        :param time: a string describing the time the Configuration was captured.
        :param temperature: the temperature of the Configuration.
        """

        self.raman_spectrum = raman_spectrum
        self.ir_spectrum = ir_spectrum
        self.matrix = matrix
        self.time = time
        self.temperature = temperature

    def __len__(self):
        return len(self.matrix)

    def __str__(self):
        string = 'Configuration with {} atoms'.format(len(self))
        if self.temperature:
            string += ' at {}'.format(self.temperature)
        if self.time:
            string += ' at {}'.format(self.time)
        return string

    @staticmethod
    def from_log_file(filename, time=None, temp=None):
        """
        Create a Configuration from the information
        in a Gaussian .log file.
        :param filename: path to a .log file generated by Gaussian.
        """

        raman = Spectrum.from_log_file(filename, type='raman')
        ir = Spectrum.from_log_file(filename, type='ir')
        matrix = DistanceMatrix.from_log_file(filename)

        return Configuration(matrix, raman, ir, time, temp)
